/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.au.cc.gallery;

import com.google.gson.Gson;
import spark.Response;

import static spark.Spark.*;

public class App {
    public String getGreeting() {
        return "Hello LaToya";
    }

    private static Gson gson = new Gson();

    private static String listUsers() {
        try {
            StringBuffer sb = new StringBuffer();
            UserDAO dao = Postgres.getUserDAO();
//	    for(User u: dao.getUsers())
//		sb.append(u.toString()+"<br/>");
            return gson.toJson(dao.getUsers());
//	    return sb.toString();
        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }

    }

    private static String getUser(String username) {
        try {
            UserDAO dao = Postgres.getUserDAO();
            return dao.getUserByUsername(username).toString();
        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }
    }

    private static String addUser(String username, String password, String fullName, Response r) {
        try {
            UserDAO dao = Postgres.getUserDAO();
            dao.addUser(new User(username, password, fullName));
            r.redirect("/users");
            return "";
        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }
    }

    public static void main(String[] args) throws Exception {

        String portString = System.getenv("JETTY_PORT");
        if (portString == null || portString.equals(""))
            port(5000);
        else
            port(Integer.parseInt(portString));

        new Admin().addRoutes();

        options("/*",
                (request, response) -> {

                    String accessControlRequestHeaders = request
                            .headers("Access-Control-Request-Headers");
                    if (accessControlRequestHeaders != null) {
                        response.header("Access-Control-Allow-Headers",
                                accessControlRequestHeaders);
                    }

                    String accessControlRequestMethod = request
                            .headers("Access-Control-Request-Method");
                    if (accessControlRequestMethod != null) {
                        response.header("Access-Control-Allow-Methods",
                                accessControlRequestMethod);
                    }

                    return "OK";
                });

        before((request, response) -> {
            response.header("Access-Control-Allow-Origin", "*");
        });

        //System.out.println(new App().getGreeting());
        //S3.demo();
        //DB2.demo();
        //port(5000);
        //get("/hello", (req, res) -> "Hello World");
        //get("/hello2", (req, res) -> "<!DOCTYPE html><html><head><title>Hello</title><meta charset=\"utf-8\" /></head><body><h1>Hello World</h1></body></html>");

        //get("/goodbye", (req, res) -> "Goodbye");

        //get("/greet/:name", (req, res) -> "Nice to meet you "+ req.params("name"));

        //new Calculator().addRoutes();

        get("/users", (req, res) -> listUsers());
        get("/users/:username", (req, res) -> getUser(req.params(":username")));
        get("/addUser/:username/:password/:fullName",
                (req, res) -> addUser(req.params(":username"), req.params(":password"), req.params(":fullName"), res));
    }
}

